#!/usr/bin/env node
// vim:ft=javascript

global.cli   = require('commander');
var moment   = require('moment');
var Q        = require('q');
var _        = require('underscore');
var util     = require('util');
var Helpers  = require('../lib/helpers');
var Landing  = require('../lib/reporters/landing');
var Tmux     = require('../lib/reporters/tmux');
var Logger   = require('../lib/reporters/logger');
var Speaker  = require('../lib/reporters/speaker');
var Runner   = require('../lib/runner');

Q.longStackSupport = true;

cli
  .usage('[reason]')
  .version(require('../package').version)
  .option('-w, --work [mins]', 'work timer length [25]', 25)
  .option('-b, --break [mins]', 'break timer length, 0 to disable [5]', 5)
  .option('-d, --duration [mins]', 'shortcut for -w <mins> -b 0', null)
  .option('-t, --tmux', 'enable tmux reporting')
  .option('-l, --log [file]', 'log to this file')
  .option('-m, --minimal-announcements', 'only announce start and completion of work and break cycles')
  .option('-q, --quiet', 'no sounds')
  .on('--help', function() {
    console.log('  examples:');
    console.log('');
    console.log('    $ pomojs               # start a timer');
    console.log('    $ pomojs "Fix stuff"   # with reason');
    console.log('    $ pomojs -w 10         # 10-minute pomodoro');
    console.log('    $ pomojs -d 5 "Tea"    # Simple tea timer (no break)');
    console.log('    $ pomojs -m            # Default timers w/ minimal announcements');
  })
  .parse(process.argv);

if (cli.duration) { cli.work = cli.duration; cli.break = 0; }

// Account for numbers, eg, `pomojs 23 2 do things`
if (cli.args[0] && +cli.args[0] > 0 && _(cli.rawArgs).intersection(['--work','-w']).length === 0) {
  cli.work = cli.args.shift();
  if (cli.args[0] && +cli.args[0] >= 0 && _(cli.rawArgs).intersection(['--break','-b']).length === 0) {
    cli.break = cli.args.shift();
  }
}

var pomo = new Runner(cli.work, cli.break, { reason: cli.args.join(' ') || 'work', minimalAnnouncements: cli.minimalAnnouncements });

// Activate reporters
if (cli.log) Logger.extend(pomo, cli.log);
if (cli.tmux) Tmux.extend(pomo, { file: '~/.pomo_stat' });
Speaker.extend(pomo, { quiet: cli.quiet });
Landing.extend(pomo);

pomo.run();
